{
  "info": {
    "_postman_id": "7e9c1b2a-4b5d-4e3c-8f9a-9f9b9f9b9f9b",
    "name": "Green Table API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{BASE_URL}}/api/auth/register",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "auth", "register"]
            }
          }
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{BASE_URL}}/api/auth/login",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "auth", "login"]
            }
          }
        }
      ]
    },
    {
      "name": "Food",
      "item": [
        {
          "name": "Create Food Item",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test Pizza\",\n    \"description\": \"Margherita\",\n    \"price\": 12.99,\n    \"quantity\": 5,\n    \"expiryDate\": \"2024-03-30T18:00:00Z\",\n    \"timeOfCooking\": \"2024-03-29T14:30:00Z\",\n    \"restaurantId\": \"{{restaurant_id}}\",\n    \"imageUrl\": \"https://example.com/pizza.jpg\",\n    \"isAvailable\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{BASE_URL}}/api/food",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "food"]
            },
            "description": "Test creation of food item with full payload"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "pm.test(\"Response has food ID\", function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data._id).to.exist;"
                  ]
                }
              }
          ]
        },
        {
          "name": "Get Available Food",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/api/food",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "food"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response contains array\", function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');"
                  ]
                }
              }
          ]
        },
        {
          "name": "Claim Food Item",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"foodId\": \"{{food_id}}\",\n    \"consumerId\": \"{{consumer_id}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{BASE_URL}}/api/food/claim",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "food", "claim"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Availability updated\", function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.isAvailable).to.be.false;"
                  ]
                }
              }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "pm.environment.set('BASE_URL', 'http://localhost:3000');"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "BASE_URL",
      "value": "http://localhost:3000"
    }
  ]
}